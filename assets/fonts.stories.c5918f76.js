var i=Object.defineProperty;var r=(e,t)=>i(e,"name",{value:t,configurable:!0});import"./index.1a9923d2.js";import{c as o,A as c,M as d}from"./Props.086b8ed4.js";import"./jsx-runtime.9151f591.js";import"./iframe.8f0b59c7.js";import{T as l}from"./TokensGrid.f82fa89c.js";import{f as u}from"./index.042773fe.js";import"./string.5ef302f9.js";import"./index.13734fab.js";import"./es.map.constructor.508c70b8.js";import"./es.number.to-fixed.9b0cb1e1.js";function p(){return p=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var a in s)Object.prototype.hasOwnProperty.call(s,a)&&(e[a]=s[a])}return e},p.apply(this,arguments)}r(p,"_extends");const y={},f="wrapper";function m({components:e,...t}){return o(f,p({},y,t,{components:e,mdxType:"MDXLayout"}),o(d,{title:"Tokens/Fonts",mdxType:"Meta"}),o("h1",null,"Fonts Family"),o("p",null,"Fontes utilizadas no ignite-ui"),o(l,{tokens:u,mdxType:"TokensGrid"}))}r(m,"MDXContent");m.isMDXComponent=!0;const g=r(()=>{throw new Error("Docs-only story")},"__page");g.parameters={docsOnly:!0};const n={title:"Tokens/Fonts",includeStories:["__page"]},x={};n.parameters=n.parameters||{};n.parameters.docs={...n.parameters.docs||{},page:()=>o(c,{mdxStoryNameToKey:x,mdxComponentAnnotations:n},o(m,null))};const j=["__page"];export{j as __namedExportsOrder,g as __page,n as default};
//# sourceMappingURL=fonts.stories.c5918f76.js.map
